compile with /usr/local/cuda/bin/nvcc   --resource-usage  -O3  mainpar.cu sha256unroll5.cu -Xcompiler -fopenmp -o testpar 
or something similar, including arch=...

Algorithm taken mostly from https://github.com/SethosII/birthday-attack but adapted to this particular case.

Major problem is that any minor mod of sha256Transform increases the need of variables by 48 unsigned ints.
To avoid it, we explicit the use of mod, making messageSchedule a sort of circular buffer.

When building, you will need to alter the number of threads per block, so that it fits in the target platform 
(compiler does not tell us if it does). Also, you could try different limits of the number of registers. 

Compilando con arch 35 y 70 registros se obtienen unas 175000 comprobaciones por segundo en una K40m

¿Cuanto cuesta hacer un conjunto de tareas? Segun el hardware. La K40 todavia cuesta unos $2,400.00. 
Las C2050 en cambio se ven ya a $350.00 de segunda mano y sacan unas 50000 comprobaciones por segundo;
conseguir la misma velocidad sale a mitad de precio... pero ya seria su fin de recorrido, mientras
que las otras todavia serian de nuevo vendibles como segunda mano, o reusables para minerias varias.

Pongamos pues $1200 por tarjeta. Una tarea tipica, un distrito y 90 años, son 77004000000 comprobaciones, que serian
122.3 horas de GPU, unos 5 dias. En 60 dias se amortiza el precio comparado con amazon, habiendo hecho unas 10-12 tareas.

¡¡Si se planea un calculo en menos de 60 dias, es mas barato contratar amazon aws!!
